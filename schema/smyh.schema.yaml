# Rime schema settings
# encoding: utf-8

schema:
  schema_id: smyh
  name: 吉旦餅
  version: "alpha"
  author:
    - 宇浩输入法
    - 阿吉
    - forFudan
    - 王牌饼干
  description: |
    吉旦餅，基于宇浩輸入法製作。
    宇浩輸入法QQ群：735728797
  dependencies:
    # 宇浩拼音, 用于反查
    - yuhao_pinyin
    # 基础码表
    - smyh.base
    # 全码官宇词库
    - smyh.yuhaowords
    # 基础码表
    - smyh_tc.base
    # 全码官宇词库
    - smyh_tc.yuhaowords

switches:
  - name: ascii_punct
    states: [ '，。', '，．' ]
    reset: 0
  - name: full_shape
    states: [ 半, 全 ]
    reset: 0
  - options: [ division.off, division.lv1, division.lv2, division.lv3, division.lv4 ]
    states: [ 註解關, 註解一, 註解二, 註解三, 註解四 ]
    reset: 0
  - name: single_char
    states: [ 智能, 純單 ]
    reset: 0
  - options: [ full.word, full.char, full.off ]
    states: [ 字詞, 全單, 三碼 ]
    reset: 0
  - name: embeded_cands
    states: [ 普通, 嵌入 ]
    reset: 1
  - name: smyh_tc
    states: [ 簡化字, 傳統字 ]
    reset: 0
  - name: completion
    states: [ 簡潔, 預測 ]
    reset: 0
  - options: [ charset.all, charset.freqly ]
    states: [ 全CJK, 僅常用字 ]
    reset: 0
  - name: ascii_mode
    reset: 0

engine:
  processors:
    - lua_processor@*smyh.core_processor@wafel
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
  translators:
    - punct_translator
    # 上次上屏历史
    - history_translator@history
    # 反查
    - reverse_lookup_translator@rev_pinyin
    # 主翻译器
    - lua_translator@*smyh.core_translator@wafel
  filters:
    - simplifier
    # 候选去重
    - uniquifier
    # 反查拆分提示
    - simplifier@rev_div
    # 拆分提示
    - simplifier@division.lv1
    - simplifier@division.lv2
    - simplifier@division.lv3
    - simplifier@division.lv4
    # 嵌入候选
    - lua_filter@*smyh.embeded_cands@embeded_cands

speller:
  alphabet: "qwertyuiopasdfghjklzxcvbnm `|.:"
  initials: "qwertyuiopasdfghjklzxcvbnm`"
  auto_select: true
  auto_select_unique_candidate: true
  algebra:

# 重复上次上屏
history:
  input: '`'
  size: 1
  initial_quality: 1

# 部件拆分提示
division.lv1:
  __include: rev_div
  option_name: division.lv1
  comment_format:
    - xform/\(([^,]*),([^,]*),([^,]*),([^,]*)\)/($1)/
    - xform/.*\(([^()]*)\)$/($1)/
    - xlit/\{\}/\⟨\⟩/
  tags: [ abc, rev_pinyin ]

# 拆分編碼提示
division.lv2:
  __include: rev_div
  option_name: division.lv2
  comment_format:
    - xform/\(([^,]*),([^,]*),([^,]*),([^,]*)\)/($2)/
    - xform/.*\(([^()]*)\)$/($1)/
  tags: [ abc, rev_pinyin ]

# 讀音提示
division.lv3:
  __include: rev_div
  option_name: division.lv3
  comment_format:
    - xform/\(([^,]*),([^,]*),([^,]*),([^,]*)\)/($3)/
    - xform/.*\(([^()]*)\)$/($1)/
    - xlit/_/,/
  tags: [ abc, rev_pinyin ]

# 字集提示
division.lv4:
  __include: rev_div
  option_name: division.lv4
  comment_format:
    - xform/\(([^,]*),([^,]*),([^,]*),([^,]*)\)/($4)/
    - xform/.*\(([^()]*)\)$/($1)/
  tags: [ abc, rev_pinyin ]

# 部件拆分及編碼提示, 反查时顯示
rev_div:
  option_name: division.off
  opencc_config: smyh_div.json
  tips: all
  show_in_comment: true
  comment_format:
    - xform/\(([^,]*),([^,]*),([^,]*),([^,]*)\)/($1·$2)/
    - xlit/\{\}/\⟨\⟩/
  tags: [ rev_pinyin ]

# 拼音反查
rev_pinyin:
  tag: rev_pinyin
  prefix: "`"
  dictionary: yuhao_pinyin
  tips: "[拼音]"
  preedit_format:
    - xform/^`//
  comment_format:
    - "xform/^/(/"
    - "xform/$/)/"

wafel:
  funckeys:
    # under linux, cat /usr/include/X11/keysymdef.h
    # or visit: https://gitlab.freedesktop.org/xorg/proto/xorgproto/-/blob/master/include/X11/keysymdef.h
    # frequently used:
    # - functional keys: escape: 0xff1b; return: 0xff0d; tabular: 0xff09;
    # - ascii characters: space: 0x20; semicolon: 0x3b; slash: 0x2f; grave: 0x60;
    macro: [ 0x2f ]      # 以這些字符開頭, 則認爲是宏調用
    primary: [ 0x20 ]    # 首要簡碼鍵
    secondary: [ 0x3b ]  # 次要簡碼鍵
    tertiary: []         # 次次簡碼鍵
    fullci: [ 0xff09 ]   # 碼長爲四時, 輸入此串上屏首選
    break: [ 0xff09 ]    # 打斷施法
    repeat: [ 0x60 ]     # 重複上屏
    clearact: [ 0xff0d ] # 清除活動編碼
  mappers:
    # 常用字過濾器
    - option_name: charset.freqly
      expr: return require("smyh.custom").freq_filter()
  macros:
    help:
      - { type: tip, name: ❖配置中心 }
      - { type: switch, name: single_char, states: [ □智能, ■純單 ] }
      - { type: radio, names: [ full.word, full.char, full.off ], states: [ ☑☑字詞, ☐☑全單, ☐☐三碼 ] }
      - { type: switch, name: embeded_cands, states: [ ☐嵌入, ☑嵌入 ] }
      - { type: switch, name: smyh_tc, states: [ □簡化字, ■傳統字 ] }
      - { type: switch, name: completion, states: [ □簡潔, ■補全 ] }
      - { type: radio, names: [ division.off, division.lv1, division.lv2, division.lv3, division.lv4 ], states: [ ☐☐☐☐註解, ☑☐☐☐註解, ☐☑☐☐註解, ☐☐☑☐註解, ☐☐☐☑註解 ] }
    date:
      - { type: eval, name: ☀日期, expr: return os.date("%Y-%m-%d") }
      - { type: eval, name: ⛅年月日, expr: return os.date("%Y年%m月%d日") }
    time:
      - { type: eval, name: ⌚時間, expr: return os.date("%H:%M:%S") }
      - { type: eval, name: Ⓣ時間, expr: return os.date("%Y%m%d%H%M") }
      - { type: eval, name: Ⓢ時間戳, expr: return tostring(os.time()) }
    div:
      - type: radio
        names: [ division.off, division.lv1, division.lv2, division.lv3, division.lv4 ]
        states: [ ☐☐☐☐無註解, ☑☐☐☐拆分提示, ☐☑☐☐編碼提示, ☐☐☑☐顯示注音, ☐☐☐☑顯示字集 ]
    embed:
      - { type: switch, name: embeded_cands, states: [ ☐嵌入編碼, ☑嵌入候選 ] }
    full:
      - type: radio
        names: [ full.word, full.char, full.off ]
        states: [ "☑☑四碼字詞: 顯示所有候選", "☐☑四碼全單: 隐藏詞語候選", "☐☐僅三碼: 隐藏四碼候選" ]
    smart:
      - { type: switch, name: single_char, states: [ □智能組詞, ■純單模式 ] }
    trad:
      - { type: switch, name: smyh_tc, states: [ "□簡化字: 使用簡化字碼表", "■傳統字: 使用傳統字碼表" ] }
    comp:
      - type: switch
        name: completion
        states: [ "□簡潔模式: 不顯示編碼預測結果", "■自動補全: 顯示編碼預測結果" ]
    charset:
      - type: radio
        names: [ charset.all, charset.freqly ]
        states: [ "□全CJK字集: 無過濾", "■常用字集: 過濾非常用字" ]

# 嵌入候選的顯示配置
# 默認顯示效果爲:
# 宇[浩¹]iwl ~淍² ~泃³
embeded_cands:
  index_indicators: [ ¹, ², ³, ⁴, ⁵, ⁶, ⁷, ⁸, ⁹, ⁰ ]       # 嵌入候選的序號顯示格式
  first_format: "${Stash}[${候選}${Seq}]${Code}${Comment}" # 首選的渲染格式
  next_format: "${Stash}${候選}${Seq}${Comment}"           # 非首選的渲染格式
  separator: " "                                           # 候選之間的分隔符
  stash_placeholder: "~"                                   # 非首選的延遲串占位符, 支持 ${Stash} 變量

# 标点
punctuator:
  import_preset: symbols_yuhao

key_binder:
  bindings:
    # 空格清空错码
    - { when: has_menu, accept: space, send: space }
    - { when: composing, accept: space, send: Escape }
    # 减号、等号翻页
    - { when: paging, accept: minus, send: Page_Up }
    - { when: has_menu, accept: equal, send: Page_Down }
    # 分号、引号选重
    - {when: has_menu, accept: semicolon, send: 2}
    - {when: has_menu, accept: apostrophe, send: 3}
    # 拆分提示
    - { when: has_menu, accept: "/", toggle: division.off }
    # 内嵌候選開關
    - { when: always, accept: "Control+Shift+E", toggle: embeded_cands }
    # 中英文标点
    - {when: always, accept: Control+period, toggle: ascii_punct}

recognizer:
  patterns:
    # 拼音反查模式
    rev_pinyin: "^`[a-z]*$"
    # 符号模式
    punct: '^/([0-9]0?|[A-Za-z]+)$'

menu:
  page_size: 3
